{"version":3,"file":"main.js","mappings":"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","sources":["webpack://node-mini-projects/./apps/authenticated/src/app/controllers/index.ts","webpack://node-mini-projects/./apps/authenticated/src/app/helpers/index.ts","webpack://node-mini-projects/./apps/authenticated/src/app/models/profile.ts","webpack://node-mini-projects/./apps/authenticated/src/app/models/user.ts","webpack://node-mini-projects/./apps/authenticated/src/app/routers/index.ts","webpack://node-mini-projects/./apps/authenticated/src/environments/environment.ts","webpack://node-mini-projects/external commonjs \"bcrypt\"","webpack://node-mini-projects/external commonjs \"body-parser\"","webpack://node-mini-projects/external commonjs \"cors\"","webpack://node-mini-projects/external commonjs \"express\"","webpack://node-mini-projects/external commonjs \"mongoose\"","webpack://node-mini-projects/external commonjs \"tslib\"","webpack://node-mini-projects/webpack/bootstrap","webpack://node-mini-projects/./apps/authenticated/src/main.ts"],"sourcesContent":["import { errorHandler } from \"apps/authenticated/src/app/helpers\";\r\nimport Profile from \"apps/authenticated/src/app/models/profile\";\r\nimport User from \"apps/authenticated/src/app/models/user\";\r\nimport * as bcrypt from \"bcrypt\";\r\nimport { Request, Response } from \"express\";\r\nexport const signup = errorHandler(async (req: Request, res: Response) => {\r\n  const { name, email, password } = req.body;\r\n  const foundUser = await User.findOne({ email });\r\n  if (foundUser) {\r\n    return res.status(400).json({\r\n      success: false,\r\n      message: \"EMAIL_EXISTED\",\r\n    });\r\n  }\r\n  const hashedPassword = await new Promise((resolve, reject) => {\r\n    bcrypt.hash(password, 10, (err, hash) => {\r\n      if (err) {\r\n        return reject(err);\r\n      }\r\n      resolve(hash);\r\n    });\r\n  });\r\n  const user = await User.create({\r\n    email,\r\n    password: hashedPassword,\r\n  });\r\n  const profile = await Profile.create({\r\n    name,\r\n    email,\r\n    userId: user._id,\r\n  });\r\n  return res.status(200).json({\r\n    success: true,\r\n    data: profile,\r\n  });\r\n});\r\n","import { NextFunction, Request, RequestHandler, Response } from \"express\";\r\n\r\nexport const errorHandler = function (callback: RequestHandler) {\r\n  return (req: Request, res: Response, next: NextFunction) => {\r\n    try {\r\n      callback(req, res, next);\r\n    } catch (e) {\r\n      return res.status(500).json({\r\n        success: false,\r\n        error: \"Internal error\",\r\n      });\r\n    }\r\n  };\r\n};\r\n","import { model, Schema, Types } from \"mongoose\";\r\nexport interface IProfile {\r\n  name: string;\r\n}\r\n\r\nconst profileSchema = new Schema(\r\n  {\r\n    email: {\r\n      type: String,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    userId: {\r\n      type: Types.ObjectId,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nconst Profile = model(\"Profile\", profileSchema);\r\nexport default Profile;\r\n","import { model, Schema } from \"mongoose\";\r\n\r\nconst userSchema = new Schema(\r\n  {\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nconst User = model(\"User\", userSchema);\r\nexport default User;\r\n","import { signup } from \"apps/authenticated/src/app/controllers\";\r\nimport * as express from \"express\";\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/api/sign-up\", signup);\r\n \r\nexport default router","export const environment = {\r\n  production: false,\r\n  dbUsername: \"daicatam001\",\r\n  dbPassword: \"%40Bcdmon1\",\r\n  dbCluster: \"cluster0.n5ikb\",\r\n  dbName: \"authenticated\",\r\n};\r\n","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport * as express from \"express\";\r\nimport routers from \"./app/routers\";\r\nimport * as cors from \"cors\";\r\nimport * as bodyParser from \"body-parser\";\r\nimport mongoose from \"mongoose\";\r\nimport { environment } from \"apps/authenticated/src/environments/environment\";\r\nconst app = express();\r\n\r\napp.use(cors());\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n// parse application/json\r\napp.use(bodyParser.json());\r\napp.use(routers);\r\n\r\nconst port = process.env.port || 3333;\r\nconst server = app.listen(port, async () => {\r\n  await mongoose.connect(\r\n    `mongodb+srv://${environment.dbUsername}:${environment.dbPassword}@${environment.dbCluster}.mongodb.net/${environment.dbName}?retryWrites=true&w=majority`\r\n  );\r\n  console.log(`Listening at http://localhost:${port}/api`);\r\n});\r\nserver.on(\"error\", console.error);\r\n"],"names":[],"sourceRoot":""}